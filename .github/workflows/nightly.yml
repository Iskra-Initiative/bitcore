name: Extended Tests

on:
  workflow_dispatch: # manual trigger on any branch
    inputs:
      branch:
        description: 'Branch to test (leave empty for current branch)'
        required: false
        default: ''
  # Uncomment the schedule below if you want to run these tests daily on main
  # schedule:
  #   # run every day at 2 AM UTC on main branch
  #   - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # extended testing with nightly rust
  nightly-tests:
    name: Nightly Rust Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install nightly Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy, rustfmt

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev socat

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: nightly-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build with nightly
      run: cargo +nightly build --verbose

    - name: Test with nightly
      run: cargo +nightly test --verbose

    - name: Run socat tests with nightly
      run: cargo +nightly test --test socat_tests -- --ignored --nocapture

    - name: Check for nightly-specific warnings
      run: cargo +nightly clippy --all-targets --all-features
      continue-on-error: true



  # security audit and vulnerability scan
  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit and cargo-deny
      run: |
        cargo install cargo-audit
        cargo install cargo-deny

    - name: Run security audit
      run: cargo audit

    - name: Run vulnerability scan
      run: cargo deny check

  # minimum supported rust version
  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install MSRV toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.70.0  # adjust based on your MSRV

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: msrv-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libudev-dev

    - name: Check MSRV build
      run: cargo build --verbose

    - name: Check MSRV tests
      run: cargo test unit_tests

  # cross-platform compatibility
  cross-platform:
    name: Cross-platform Tests
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: windows-2019
            target: x86_64-pc-windows-msvc
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: macos-11
            target: x86_64-apple-darwin
          - os: macos-12
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libudev-dev

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build for target
      run: cargo build --target ${{ matrix.target }} --verbose

    - name: Test for target
      run: cargo test --target ${{ matrix.target }} unit_tests

  # notify on failure
  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [nightly-tests, security, msrv, cross-platform]
    if: failure()

    steps:
    - name: Create issue on failure
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Extended tests failed',
            body: `Extended tests failed on ${new Date().toISOString()}\n\nWorkflow: ${context.workflow}\nRun: ${context.runNumber}`,
            labels: ['bug', 'ci-failure']
          })
